"""
    函数内存分配
"""

# 将函数创建的代码加载到内存中（代码区）
# 备注：函数不执行
def func01():
    a = 1000

# 调用函数在内存中开辟空间（栈帧）
# 备注：存储在函数内部创建的变量
func01()
# 函数执行后栈帧销毁


# 结论：
#　　不可变类型的数据传参时，函数内部不会改变原数据的值。
#　　可变类型的数据传参时，函数内部可以改变原数据。

def func02(p1,p2):
    # 修改栈帧中变量存储的地址
    p1 = 100
    # 修改列表第一个元素存储的地址
    p2[0] = 200

a = 10 # 不可变对象
b = [20] # 可变对象
# 将变量a,b存储的数据地址传入函数
func02(a,b)
print(a)# 10
print(b)# [200]
